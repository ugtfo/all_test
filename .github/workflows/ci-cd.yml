name: CI/CD

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: 'Target for deployment'
        required: true
        default: 'all'
        type: choice
        options:
          - first_test
          - second_test
          - all
  push:
    branches:
      - gh-pages
  pull_request:

jobs:
  flake8-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install allure-pytest

      - name: Create allure-results directory
        run: mkdir -p allure-results

      - name: Run tests
        run: pytest test_task.py --alluredir=allure-results || exit 0

      - name: Check if allure-results were generated
        run: ls -R allure-results

      - name: Upload Allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV  

  test:
    runs-on: ubuntu-latest
    needs: flake8-check
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 12345
          POSTGRES_DB: testdb
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Run first test if selected
        if: ${{ github.event.inputs.deployment_target == 'first_test' || github.event.inputs.deployment_target == 'all' }}
        run: pytest test_task.py --alluredir=allure-results || exit 0

      - name: Run second test if selected
        if: ${{ github.event.inputs.deployment_target == 'second_test' || github.event.inputs.deployment_target == 'all' }}
        run: pytest integration.py --alluredir=allure-results || exit 0

      - name: Run third test if all is selected
        if: ${{ github.event.inputs.deployment_target == 'all' }}
        run: pytest e2e.py --alluredir=allure-results || exit 0

      - name: Upload Allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results

  publish:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
        
      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: build/allure-results

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.MY_GITHUB_TOKEN }}
          publish_branch: gh-pages-deploy 
          publish_dir: allure-history

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 

      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          push: true
          tags: esseniya/testrepo:latest
