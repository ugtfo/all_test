on:
  push:
    branches:
      - main
  pull_request:

jobs:
  flake8-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: List files in the current directory
        run: ls -R

      - name: Print current working directory
        run: pwd
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt не найден!"
          fi
          pip install flake8

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV  

  test:
    runs-on: ubuntu-latest
    needs: flake8-check
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 12345
          POSTGRES_DB: testdb
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
<<<<<<< HEAD
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install allure-pytest  # Установка allure-pytest для использования allure

      - name: Run tests
        run: |
          pytest --alluredir=allure-results  # Теперь pytest должен быть доступен
=======
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt; fi

      - name: Run tests and output results to console
        run: |
          pytest --alluredir=allure-results --capture=no --tb=short
        continue-on-error: true
>>>>>>> 84968c9 (ready)

      - name: Upload Allure results
        uses: actions/upload-artifact@v3  
        with:
          name: allure-results
          path: allure-results

<<<<<<< HEAD
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Зависимость от тестов
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest  # Убедитесь, что allure-pytest установлен

      - name: Generate Allure report
        run: |
          allure generate allure-results -o allure-report  # Генерация отчета

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report  # Директория с отчетом
          publish_branch: gh-pages  # Укажите ветку для публикации

=======
>>>>>>> 84968c9 (ready)
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 

      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          push: true
          tags: esseniya/testrepo:latest
